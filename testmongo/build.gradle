sourceSets {
    main {
        java {
            srcDir 'src'
            
        }
        resources{

			srcDir 'resources'
        	
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources{

        }
    }
    
}

dependencies {
	api (
           	[group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.12', transitive: true],



            [group: 'com.bbossgroups', name: 'bboss-data', version: "${PROJ_BBOSS_DATA_VERSION}", transitive: true],


               
    )
    runtimeOnly (
			[group: 'com.bbossgroups', name: 'bboss-bootstrap-rt', version: "${bboss_version}", transitive: true],
             
               
    )
     
}


task copyJarFiles(type: Sync,dependsOn:'jar'){
	from configurations.api{
		canBeResolved=true

	}
	from jar.outputs
	exclude { details -> details.file.name.startsWith('bboss-rt')  }
	into 'build/dist/lib'

}

task copyRTJarFiles(type: Copy,dependsOn:'copyJarFiles'){

	from configurations.api{
		canBeResolved=true

	}
	include { details -> details.file.name.startsWith('bboss-rt')  }
	into 'build/dist'
	rename ("bboss-rt-${bboss_version}.jar", "${project.name}-${bboss_version}.jar")
}
task copyToolFiles(type: Copy ,dependsOn:'copyRTJarFiles')  {

	from ('runfiles')
			{
				expand(
						bboss_version:"${bboss_version}",
						project:"${project.name}"
				)

			}
	filteringCharset = 'UTF-8'
	into 'build/dist/'



}
task copyResourcesfiles(type: Sync )  {
	from fileTree(dir: 'src/main/resources')
	filteringCharset = 'UTF-8'
	into 'build/dist/resources'
}

task releaseVersion(type: Zip,dependsOn:['copyToolFiles','copyResourcesfiles']) {

	//appendix = 'wrapper'
	archiveClassifier = 'released'
	from 'build/dist/'

}

