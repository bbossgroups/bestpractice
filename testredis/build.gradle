sourceSets {
    main {
        java {
            srcDir 'src'
            
        }
        resources{
        	
        	
        	
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources{
        	srcDir 'resources'
        }
    }
    
}

dependencies {
    api(
            [group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2_version, transitive: false],
            [group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version, transitive: false],
            [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version, transitive: true],
    )
	api (
//           	[group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.36', transitive: true],


            [group: 'com.bbossgroups', name: 'bboss-util', version: "${PROJ_BBOSS_VERSION}", transitive: false],
            
            [group: 'com.bbossgroups', name: 'bboss-data', version: "${PROJ_BBOSS_DATA_VERSION}", transitive: false],
            [group: 'com.bbossgroups', name: 'bboss-core', version: "${PROJ_BBOSS_VERSION}", transitive: false],
              [group: 'oro', name: 'oro', version: '2.0.8', transitive: false],
                [group: 'cglib', name: 'cglib-nodep', version: '3.3.0', transitive: false],
              
              
               [group: 'org.apache.commons', name: 'commons-pool2', version: '2.12.0', transitive: false],
               [group: 'redis.clients', name: 'jedis', version: '5.1.0', transitive: false],
                
               
    )
    runtimeOnly (
			[group: 'com.bbossgroups', name: 'bboss-bootstrap-rt', version: "${bboss_version}", transitive: true],
             
               
    )
     
}
// 创建可解析的配置
configurations {
    apiResolvable {
        canBeResolved = true
        extendsFrom api
    }
    compileOnlyResolvable {
        canBeResolved = true
        extendsFrom compileOnly
    }

    runtimeOnlyResolvable {
        canBeResolved = true
        extendsFrom runtimeOnly
    }
}
tasks.register('copyJarFiles', Sync) {
    dependsOn 'jar'


    from configurations.apiResolvable {

    }
    from jar.outputs
    exclude { details -> details.file.name.startsWith('bboss-rt') }
    into 'build/dist/lib'

}

tasks.register('copyRTJarFiles', Copy) {
    dependsOn 'copyJarFiles'
    from configurations.runtimeOnlyResolvable {

    } - configurations.apiResolvable {

    }
    into 'build/dist'
    rename("bboss-rt-${bboss_version}.jar", "${project.name}-${bboss_version}.jar")
}
tasks.register('copyToolFiles', Copy) {
    dependsOn 'copyRTJarFiles'
    from('runfiles')
            {
                expand(
                        bboss_version: "${bboss_version}",
                        project: "${project.name}"
                )

            }
    filteringCharset = 'UTF-8'
    into 'build/dist/'


}
tasks.register('copyResourcesfiles', Sync) {
    from fileTree(dir: 'resources')
    filteringCharset = 'UTF-8'
    into 'build/dist/resources'
}

tasks.register('releaseVersion', Zip) {
    dependsOn  'copyToolFiles', 'copyResourcesfiles'

    //appendix = 'wrapper'
    archiveClassifier = 'released'


    from 'build/dist/'

}

